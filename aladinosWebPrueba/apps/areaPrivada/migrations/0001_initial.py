# Generated by Django 5.1.6 on 2025-04-23 13:29

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('is_active', models.BooleanField(default=False)),
                ('email_verified', models.BooleanField(default=False)),
                ('role', models.CharField(choices=[('GESTOR', 'Gestor'), ('JEFE', 'Jefe'), ('COMERCIAL', 'Comercial'), ('USER', 'Usuario')], default='USER', max_length=50)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('fundRaiserCode', models.CharField(blank=True, max_length=20)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EmailVerificationToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PasswordResetToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Socio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_creacion', models.DateTimeField(blank=True, null=True)),
                ('nombre_socio', models.CharField(max_length=100)),
                ('apellido_socio', models.CharField(max_length=100)),
                ('genero_socio', models.CharField(max_length=10)),
                ('tipo_identificacion_socio', models.CharField(max_length=20)),
                ('numero_identificacion_socio', models.CharField(max_length=20)),
                ('fecha_nacimiento', models.DateField()),
                ('via_principal', models.CharField(max_length=255)),
                ('cp_direccion', models.CharField(max_length=10)),
                ('ciudad_direccion', models.CharField(max_length=100)),
                ('estado_provincia', models.CharField(max_length=100)),
                ('importe', models.DecimalField(decimal_places=2, max_digits=10)),
                ('periodicidad', models.CharField(max_length=20)),
                ('dia_presentacion', models.CharField(default='1', max_length=255)),
                ('medio_pago', models.CharField(max_length=20)),
                ('tipo_pago', models.CharField(max_length=20)),
                ('primer_canal_captacion', models.CharField(max_length=100)),
                ('canal_entrada', models.CharField(max_length=50)),
                ('fecha_alta', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('activo', models.BooleanField(default=True)),
                ('status', models.CharField(default='Pendiente', max_length=255)),
                ('devolucion', models.BooleanField(default=False)),
                ('telefono', models.CharField(blank=True, max_length=20)),
                ('no_llamadas', models.IntegerField(default=0)),
                ('fecha_verificacion', models.DateTimeField(blank=True, null=True)),
                ('fundraiser', models.ForeignKey(blank=True, limit_choices_to={'role': 'COMERCIAL'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='socios_captados', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Socio',
                'verbose_name_plural': 'Socios',
                'ordering': ['-fecha_alta'],
            },
        ),
        migrations.CreateModel(
            name='RegistroLlamada',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_de_llamada', models.IntegerField(default=1)),
                ('resultado', models.CharField(max_length=100)),
                ('notas', models.TextField()),
                ('fecha_hora', models.DateTimeField(auto_now_add=True)),
                ('fundraiser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('socio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='areaPrivada.socio')),
            ],
        ),
        migrations.AddIndex(
            model_name='socio',
            index=models.Index(fields=['numero_identificacion_socio'], name='areaPrivada_numero__2bb604_idx'),
        ),
        migrations.AddIndex(
            model_name='socio',
            index=models.Index(fields=['fundraiser'], name='areaPrivada_fundrai_e0a369_idx'),
        ),
        migrations.AddIndex(
            model_name='socio',
            index=models.Index(fields=['fecha_alta'], name='areaPrivada_fecha_a_ba516e_idx'),
        ),
    ]
